{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sc",
				"ScrCnt"
			],
			[
				"Sc",
				"ScrCnt"
			],
			[
				"BYP",
				"BYPASS"
			],
			[
				"by",
				"bypassInSwitch"
			],
			[
				"s",
				"sValue"
			],
			[
				"Mod",
				"ModbusSA"
			],
			[
				"scr",
				"SCR"
			],
			[
				"Scr",
				"SCR"
			],
			[
				"i2",
				"i2cRead"
			],
			[
				"STR",
				"STRIG3"
			],
			[
				"TRIG",
				"TRIG3"
			],
			[
				"SetP",
				"SetPhase2"
			],
			[
				"v",
				"v"
			],
			[
				"lorem",
				"lorem	lorem - One sentence"
			],
			[
				"duty",
				"Duty"
			],
			[
				"DUT",
				"DUTY_PERIOD0"
			],
			[
				"st",
				"stamp"
			],
			[
				"mes",
				"message_dialog"
			],
			[
				"dete",
				"detect_on_fail"
			],
			[
				"det",
				"detect_on_fail"
			],
			[
				"conv",
				"convert_to_utf8"
			],
			[
				"tmp",
				"tmp_file"
			],
			[
				"p",
				"path"
			],
			[
				"file",
				"file_name"
			],
			[
				"ac",
				"ACVALUE"
			],
			[
				"AD",
				"AD_IDLE"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "#include \"p33fj16gs504.h\"\n#include \"i2c.h\"\n\n#define SCL			PORTBbits.RB15		//I2C Clock PORTB pin 15\n#define SDA			PORTBbits.RB5		//I2C Data PORTB pin 5\n#define	SCL_TRIS	TRISBbits.TRISB15	//SDA Tris bit\n#define	SDA_TRIS	TRISBbits.TRISB5	//SDA Tris bit\n#define CONTROLBYTE 0b10100000			// Control byte\n#define ACKBIT      0x00				// ACK bit\n#define NAKBIT      0x80				// NAK bit\n\n#define NOP() {int i;for(i=0;i<50;i++) Nop();}\n#define SDA_LOW(b) SDA_TRIS=0;SDA=0;if(b)NOP()\n#define SDA_HIGH(b) SDA_TRIS=1;SDA=1;if(b)NOP()\n#define SCL_LOW(b) SCL_TRIS=0;SCL=0;if(b)NOP()\n#define SCL_HIGH(b) SCL_TRIS=0;SCL=1;if(b)NOP()\n#define SDAR(b) SDA_TRIS=1;ODCBbits.ODCB5=1;if(b)NOP()\n\n//ÕâÊÇI2C\nvoid InitI2C(void) \n{\n	SCL_LOW(0);\n	SDAR(0);\n}	\n\n//A ^^\\___\n//L ^^^^\\_\nvoid start(void)\n{\n	//SCL_LOW(0);\n    SDA_HIGH(1);					// Ensure SDA is high (ÎªÊäÈë)\n    SCL_HIGH(1);					// Ensure SCL is high\n    SDA_LOW(1);					// Configure SDA as an output,Ensure SDA low\n    SCL_LOW(1);\n    //SDAR(0);\n}\n\n//A ___/^^^\n//L _/^^^\\_\nvoid stop(void)\n{\n	//SCL_LOW(0);\n    SDA_LOW(1);					// Configure SDA as an output,Ensure SDA low\n    SCL_HIGH(1);					// Pull SCL high\n    SDA_HIGH(1);					// Allow SDA to be pulled high\n    SDAR(0);	//release SDA line\n}\n\n//A ^^^\\___\n//L _/^^^\\_\nchar chkack(void)\n{\n	unsigned char i=0;\n	SCL_LOW(0);\n	SDAR(0);							//release SDA for input, is high\n	SCL_HIGH(1);\n	/*while((SDA==f) && (i<100)) \n	{\n		i++;\n		NOP();\n	}*/\n	i = SDA;\n	SCL_LOW(1);\n	SDA_HIGH(0);\n	return i;\n}\n\nvoid ack(void)\n{\n	SDA_LOW(1);\n	SCL_HIGH(1);\n	SCL_LOW(1);\n	//SDA_HIGH(0);\n}\n\nvoid noack(void)\n{\n	SDA_HIGH(1);\n	SCL_HIGH(1);\n	SCL_LOW(1);\n}\n//A -[---]-\n//L __/^\\__\nvoid write_byte(unsigned char byte)\n{\n	unsigned char i;\n	SCL_LOW(1);\n	for(i=0;i<8;i++)\n	{\n		if((byte<<i) & 0x80)\n		{\n			SDA_HIGH(1);\n		}\n		else\n		{\n			SDA_LOW(1);\n		}\n		SCL_HIGH(1);\n		SCL_LOW(1);\n	}\n}\n\n//A -[--]--[--]--[--]--[--]--[--]--[--]--\n//L __/^^\\__/^^\\__/^^\\__/^^\\__/^^\\__/^^\\__\nunsigned char read_byte(void)\n{\n	unsigned char i,k=0;\n	SDAR(0);					//release SDA for input, is high\n	SCL_LOW(1);\n	for(i=0;i<8;i++)\n	{\n		SCL_HIGH(1);\n		k=(k<<1);//|SDA;\n		if (SDA) k=k+1;\n		SCL_LOW(1);\n	}\n	return k;\n}\n\n\nchar i2cWrite(unsigned char addr,unsigned char byte)\n{\n	start();\n	write_byte(0xA0);\n	if (chkack()) return 0;\n	write_byte(addr);\n	if (chkack()) return 0;\n	write_byte(byte);\n	stop();\n	return 1;\n}\n\n//Means writing with array\nchar i2cWriteStr(unsigned char addr,unsigned char * buf,unsigned char len)\n{\n	unsigned char i;\n	start();\n	write_byte(0xA0);\n	if (chkack()) return 0;\n	write_byte(addr);\n	if (chkack()) return 0;\n	for(i=0;i<len;i++)\n	{\n		write_byte(*buf);\n		if (chkack()) return 0;\n		buf++;\n	}\n	stop();\n	return 1;\n}\n	\nunsigned char i2cRead(unsigned char addr)\n{\n	unsigned char byte=0;\n	start();\n	write_byte(0xA0);\n	if (!chkack())return 0;\n	write_byte(addr);\n	if (chkack()) return 0;\n	stop();\n	start();\n	write_byte(0xA1);\n	if (chkack()) return 0;\n	byte=read_byte();\n	noack();\n	stop();\n	return byte;\n}\n\n//Means reading with array\nchar i2cReadStr(unsigned char addr,unsigned char *buf,unsigned char len)\n{\n	unsigned char i;\n	start();\n	write_byte(0xA0);\n	if (chkack()) return 0;\n	write_byte(addr);\n	if (chkack()) return 0;\n	start();\n	write_byte(0xA1);\n	if (chkack()) return 0;\n	for(i=0;i<len-1;i++)\n	{\n		*buf = read_byte();\n		ack();\n		buf++;\n	}\n	*buf = read_byte();\n	noack();\n	stop();\n	return 1;	\n}\n	\n		\n\n",
			"file": "i2c.c",
			"file_size": 3344,
			"file_write_time": 130119274240000000,
			"settings":
			{
				"buffer_size": 3344,
				"line_ending": "Unix",
				"scratch": true
			}
		},
		{
			"contents": "#include <p33fj16gs504.h>\n#include \"dsp.h\"\n#include \"pwm.h\"\n#include \"uart.h\"\n#include \"clock.h\"\n#include \"define.h\"\n#include \"StateMachine.h\"\n#include \"i2c.h\"\n\n/* Configuration bits */\n_FOSCSEL(FNOSC_FRC)\n_FOSC(FCKSM_CSECMD & OSCIOFNC_ON & IOL1WAY_OFF)\n_FWDT(FWDTEN_OFF)	//Watch Dog timer \n_FPOR(FPWRT_PWR128)// & BOREN_OFF) //by jwz. p33fj16gs504 not found BOREN_OFF\n_FICD(ICS_PGD1 & JTAGEN_OFF)\n\nextern int fRMSCalculation;\nunsigned int cnt = 0;\nextern unsigned long StartUpCnt;\nextern int Duty;\nunsigned char tx = 0;\n//this is Ö÷³ÌÐò\n\nint main()\n{\n	ByPassCnt = 0;	//ÅÔÂ·ÇÐ»»¼ÌµçÆ÷¼ÆÊýÆ÷\n	\n	TRISCbits.TRISC2 = 0; \n	TRISCbits.TRISC7 = 0; \n	\n	#ifdef NEWBOARD\n	TRISBbits.TRISB3 = 0; \n	TRISBbits.TRISB4 = 0; \n	#else\n	TRISCbits.TRISC0 = 0; \n	TRISCbits.TRISC13 = 0; \n	#endif\n	TRISCbits.TRISC5 = 0; \n	TRISCbits.TRISC6 = 1; \n\n	BYPASS = 1;\n	SSTART = 1;\n	SCR = 0;\n\n	initClock();\n	initStateMachineTimer();\n	#ifdef NEWBOARD\n	initUart();\n	#endif\n	initADC();\n	//InitADC_Common();\n	StartADC();\n	initPWM();\n	StartPWM();\n	InitI2C();\n\n	LED = 1;\n	StartUpCnt = 1;\n\n	Duty = 0;	\n	//i2cWrite(0,0xA5);\n	while(1)\n	{\n		cnt++;\n		if (cnt>10000)\n		{\n			//tx = sValue.ModbusSA;\n			//i2cReadStr(0,(unsigned char*)&sValue,8);\n			//if ((sValue.ModbusSA <= 1) && (tx != sValue.ModbusSA)) \n			{\n				//bypassInSwitch = 1;\n			}\n			cnt = 0;\n		}\n		if (tx != MANCTRL)\n		{\n			tx = MANCTRL;\n			bypassInSwitch = 1;\n		}\n		//tx = i2cRead(0);\n         ModbusSlave();\n         RMS_CALC();\n	}\n	return 0;\n}\n\n",
			"file": "main.c",
			"file_size": 1462,
			"file_write_time": 130122969134242123,
			"settings":
			{
				"buffer_size": 1462,
				"line_ending": "Unix",
				"scratch": true
			}
		},
		{
			"contents": "#include<p33fj16gs504.h>  \n#include<libq.h>\n#include<dsp.h>\n#include \"sineTable_50Hz.h\"\n#include \"define.h\"\n\n//ÕâÊÇÏÖÔÚÍ¬²½ËøÏà±È½ÏºÃµÄ°æ±¾\n//¹¤×÷ÓÚdsPIC33FJ16GS504\n\n// Inverter Constants \n#define TriPD 18400\n\n#define DC_OFFSET 0x3FF0 //0x43E0		//0x3FF0\n\nlong PD3 = TriPD;\nlong PD2 = TriPD;\n\nint Duty = 0;//Q15(1.0);\n\nINVSTRUCT inv = {0};\nMAINSTRUCT m = {0};\n\n#define iszc(s,v) (((s).cnt>360) && (((s).pv < 0 && ((s).cv>=0)) && ((s).cv-(s).pv>(v))))\n#define issz(s,v) (((s).cnt>128) && (((s).pv>0 && ((s).cv <=0)) && ((s).pv-(s).cv>(v))))\n\n#define invfadj(r,f) r = PD3 = (__builtin_mulsu(f,(unsigned int)(PD3))>>9)\n\n//#define Max(s,v) {(s).maxv = ((s).maxv < (v))?(v):((s).maxv);}\n#define Max(s) {(s).maxv = ((s).maxv < (s).cv)?(s).cv:((s).maxv);}\n#define Min(s) {(s).minv = ((s).minv>(s).cv)?(s).cv:((s).minv);}\n\ninline int jabs(int x)	{ return (x < 0)?(-(x)):(x); }\n\n#define abs jabs\n#define set(v) {m.cv=(v);}\n\n#define clr(v) (v) = 0\n#define inc(s) {(s).cnt=((s).cnt+1)%1024;(s).i = ((s).cnt>256)?(s).cnt-512:(s).cnt;}\n\n#define incr(s) ((s)=((s)<20000)?(s)+1:20000)\n#define decr(s) ((s)=((s)>17000)?(s)-1:17000)\n\n#define SetPhase3(v) {if (v>17500 && v < 20000) { PHASE3 = v; /*TRIG3 = STRIG3 = (v)>>1;*/ } }\n#define SetPhase2(v) {if (v>17500 && v < 20000) { PHASE2 = v; /*TRIG2 = STRIG2 = (v)>>1;*/ } }\n\n#define ZCTHV 0\n\n//variable for RMS calculate\nunsigned long long smv = 0;\nunsigned long long siv = 0;\nchar finvRMS = RMS_NOT_READY;\nchar facRMS = RMS_NOT_READY;\n\n#define CONVERSION_PAIRS 2\n\n//Äæ±äµçÑ¹,µçÁ÷\n/**\n * [ConvPair0Handler description]\n * Inverter output Voltage current gatharing\n */\nvoid ConvPair0Handler (void)\n{\n	//inverterOutputCurrent = (ADCBUF0 << 5) - DC_OFFSET;\n\n	inv.cv = (ADCBUF1 << 5) - DC_OFFSET - inv.ofs;\n	inv.cnt ++; inv.i ++;\n	\n	if(finvRMS == READY_TO_COLLECT_DATA)\n	{\n		siv	+= mulss(inv.cv,inv.cv);\n		Max(inv);Min(inv);\n	}\n	\n	if ((iszc(inv,ZCTHV)) || (inv.cnt>1000)) //Äæ±äµçÑ¹²ÉÑù¿ØÖÆ\n	{\n		inv.size = inv.cnt;\n		inv.cnt = 0;\n\n		if(finvRMS == CALCULATION_DONE)\n		{\n			siv = 0;\n			inv.maxv = inv.minv = 0;\n			//BEEP = ~BEEP;\n			finvRMS = READY_TO_COLLECT_DATA;\n		}\n		else\n		{\n			if (inv.maxv+inv.minv>10)\n			{\n				inv.ofs += (inv.ofs<1000)?1:0;\n			}\n			else if (inv.maxv+inv.minv<-10)\n			{\n				inv.ofs -= (inv.ofs>-1000)?1:0;\n			}\n			finvRMS = READY_TO_CALCULATE;\n		}\n\n		//this is only for debug,\n		Value.InvF = inv.size;\n\n		if (inv.state != OK && Value.InvV>1000)\n		{\n			inv.cycle ++;\n			if (inv.cycle>20)\n			{\n				inv.state = OK;\n			}\n		}\n		\n		Value.InvI = inv.state;\n	}\n\n	if (issz(inv,ZCTHV))\n	{\n		inv.i = 0;\n	}\n\n	inv.pv = inv.cv;\n	\n	if ((inv.idx == 0))		//·½²¨²úÉú\n	{\n		IOCON2bits.OVRDAT = 2;	//50Hz·½²¨¸ßµçÆ½\n	}	\n	else\n	if (inv.idx == 256)	//SINE_TABLE_SIZE / 2)\n	{\n		IOCON2bits.OVRDAT = 0;	//50Hz·½²¨¸ßµçÆ½\n	}\n	\n	PDC2 = mulss(SIN(inv.idx),Duty)>>15;\n\n	inv.idx = (inv.idx + 1) % SINE_TABLE_SIZE;\n\n	ADSTATbits.P0RDY = 0; // Clear the ADSTAT bits \n}\n\n//½»Á÷µçÑ¹,µçÁ÷\n/**\n * [ConvPair1Handler description]\n * AC input voltage current gathering\n */\nint err,perr = 0;\nvoid ConvPair1Handler (void)\n{\n	m.cv = (ADCBUF2 << 5) - DC_OFFSET - m.ofs;\n	//inc(m);	//inc(inv);\n	m.cnt ++;m.i++;\n\n	if(facRMS == READY_TO_COLLECT_DATA)\n	{\n		smv	+= mulss(m.cv,m.cv);\n		Max(m);Min(m);\n	}\n	\n	if (issz(m,ZCTHV))\n	{\n		m.i = 0;\n	}\n\n	if ((iszc(m,ZCTHV)) || (m.cnt>1000)) //ÊÐµçµçÑ¹²ÉÑù¿ØÖÆ\n	{\n		m.size = m.cnt;\n		m.cnt = 0;\n		\n		if(facRMS == CALCULATION_DONE)\n		{\n			smv = 0;\n			m.maxv = m.minv = 0;\n			facRMS = READY_TO_COLLECT_DATA;\n		}\n		else if (m.cnt<1000)\n		{\n			if (m.maxv+m.minv>10)\n			{\n				m.ofs += (m.ofs<1000)?1:0;\n			}\n			else if (m.maxv+m.minv<-10)\n			{\n				m.ofs -= (m.ofs>-1000)?1:0;\n			}\n			\n			facRMS = READY_TO_CALCULATE;\n		}\n		//BEEP = ~BEEP;\n		if (m.size>=1000 || Value.ACInV<1000) //³¬¹ý10´ÎÃ»ÓÐ¹ýÁãµã²úÉú,ÔòËµÃ÷½»Á÷Ê§µç\n		{\n			m.ocnt ++;\n			if (m.ocnt>5 )\n			{\n				m.state = NOK;\n				m.ocnt = 0;\n			}\n		}\n		else\n		{\n			switch(m.state)\n			{\n				case NOK:	\n				{\n					m.icnt ++;	//ÓÐ¹ýÁãµã²úÉú,ËµÃ÷ÓÐ½»Á÷ÊäÈë\n					if (m.icnt > 10 && Value.ACInV > 1000)	//½»Á÷µçÑ¹´óÓÚ100V\n					{\n						m.state = ADJ;\n						m.icnt = 0;\n					}\n				}\n				break;\n				case ADJ:\n				{\n					if (m.size > 511)\n					{\n						incr(PD3);	//²ÉÑùÖÜÆÚ±ä³¤,²ÉÑùËÙ¶ÈÏÂ½µ\n					}\n					else if (m.size < 511)\n					{\n						decr(PD3);	//²ÉÑùÖÜÆÚ±ä¶Ì³¤,²ÉÑùËÙ¶ÈÉÏÉý\n					}\n					else\n					{\n						m.cycle ++;\n						if (m.cycle>20)\n						{\n							m.state = OK;\n							m.cycle = 0;\n						}\n					}\n					SetPhase3(PD3);\n				}\n				break;\n				case OK:\n				{\n					if (m.size > 511)	//¶Ô½»Á÷ÊäÈëµçÑ¹µÄÆµÂÊ½øÐÐÎ¢µ÷\n					{\n						incr(PD3);\n						SetPhase3(PD3)\n					}\n					else if (m.size < 511)\n					{\n						decr(PD3);\n						SetPhase3(PD3)\n					}\n\n					if ((inv.state == OK))\n					{\n						if (jabs(PD3-PD2)  <  50)\n						{\n							err = (inv.i - m.i);\n							if (jabs(err) > 0)\n							{\n								if (err >  128) err =  128;\n								if (err < -128) err = -128;\n								\n								PD2 += (err>>0) - (perr>>0);\n\n								if (err > 2)	//err==perr,¼´inv.iÇÒm.i²»µÈÓÚ0\n								{\n									incr(PD2);\n								}\n								else if (err < -2)\n								{\n									decr(PD2);\n								}\n								perr = err;\n							}\n							if (jabs(err) < 2)\n							{\n								inv.cycle++;\n								if (inv.cycle > 50)\n								{\n									inv.synced = 1;\n									inv.cycle = 0;\n								}\n								inv.ocnt = 0;\n							}\n							else if (jabs(err)>10)\n							{\n								inv.ocnt++;\n								if (inv.ocnt>20)\n								{\n									inv.synced = 0;\n									inv.ocnt = 0;\n								}\n							}\n						}\n						else if (PD2 < PD3)\n						{\n							incr(PD2);\n						}\n						else if (PD2>PD3)\n						{\n							decr(PD2);\n						}\n\n						SetPhase2(PD2);\n					}\n				}\n				break;\n			}\n		}\n		Value.Power = PD3;\n		Value.Factor = PD2;\n\n		Value.BatV = inv.synced + MANCTRL;\n		Value.BatI = m.ofs;\n		Value.ChargeStatus = inv.ofs;\n\n		Value.ACInF = m.size;\n		Value.ACInI = m.state;\n		\n	}\n	\n	m.pv = m.cv;\n\n	ADSTATbits.P1RDY = 0; // Clear the ADSTAT bits\n}\n\nvoid (*jumpTable[CONVERSION_PAIRS*2-1])(void);\n\n\nvoid initADC(void)\n{\n    // Common ADC configuration \n    ADCONbits.ADON = 0;\n									// ADON £º A/D ¹¤×÷Ä£Ê½Î»\n									// 1 = A/D ×ª»»Æ÷Ä£¿éÔÚ¹¤×÷\n									// 0 = A/D ×ª»»Æ÷¹Ø±Õ    \n    ADCONbits.ADSIDL = 0;\n									// ADSIDL£º  ÔÚ¿ÕÏÐÄ£Ê½ÏÂÍ£Ö¹Î»\n									// 1 = µ±Æ÷¼þ½øÈë¿ÕÏÐÄ£Ê½Ê±£¬Ä£¿éÍ£Ö¹¹¤×÷\n									// 0 = ÔÚ¿ÕÏÐÄ£Ê½ÏÂÄ£¿é¼ÌÐø¹¤×÷    \n   	ADCONbits.SLOWCLK = 1; \n									// SLOWCLK£ºµÍÆµÊ±ÖÓ·ÖÆµ±ÈÊ¹ÄÜÎ»\n									// 1 =  Ê¹ÓÃÕë¶ÔµÍÆµADCÊäÈëÊ±ÖÓµÄÊ±ÖÓ·ÖÆµ±È¡£\n									// 		´Ë·ÖÆµ±ÈÌá¹©µÍ·ÖÆµ±ÈÓÃÀ´ÔÚ½ÏÂýµÄÊäÈëÊ±ÖÓÏÂ»ñµÃ\n									// 		ËÙ¶È×î¿ìµÄADC²Ù×÷¡£\n									// 0 =  Ê¹ÓÃÕë¶Ô¸ßÆµADCÊäÈëÊ±ÖÓµÄÊ±ÖÓ·ÖÆµ±È¡£\n									// 		´Ë·ÖÆµ±ÈÌá¹©¸ß·ÖÆµ±È¡£   	\n 	ADCONbits.FORM = 0;             \n									// FORM £ºÊý¾ÝÊä³ö¸ñÊ½Î»\n									// 1 = Ð¡Êý£¨DOUT =  dddd dddd dd00 0000£©\n									// 0 = ÕûÊý£¨DOUT = 0000 00dd dddd dddd£© 	\n	ADCONbits.EIE = 1;              // Disable Early Interrupt ,´Ë´¦½ûÓÃADÖÐ¶Ï,Ê¹ÆäÍ¨¹ýPWMÀ´´¥·¢ÖÐ¶Ï\n									// EIE£ºÌáÇ°ÖÐ¶ÏÔÊÐíÎ»\n									// 1 = ÔÚµÚÒ»´Î×ª»»Íê³Éºó²úÉúÖÐ¶Ï\n									// 0 = ÔÚµÚ¶þ´Î×ª»»Íê³Éºó²úÉúÖÐ¶Ï	\n	ADCONbits.ORDER = 0;            \n									// ORDER£º×ª»»Ë³ÐòÎ»\n									// 1 = ÏÈ×ª»»ÆæÊý±àºÅµÄÄ£ÄâÊäÈë£¬È»ºó×ª»»Å¼Êý±àºÅµÄÊäÈë\n									// 0 = ÏÈ×ª»»Å¼Êý±àºÅµÄÄ£ÄâÊäÈë£¬È»ºó×ª»»ÆæÊý±àºÅµÄÊäÈë	\n	ADCONbits.SEQSAMP = 0;          \n									// SEQSAMP £ºË³Ðò²ÉÑùÊ¹ÄÜÎ»\n									// 1 = Èç¹ûORDER =0£¬ÔÚµÚ¶þ´Î×ª»»¿ªÊ¼Ê±¶Ô¹²ÓÃ²ÉÑù/ ±£³Ö£¨S&H£©\n									// µçÂ·½øÐÐ²ÉÑù¡£Èç¹ûORDER =  1£¬ÔòÔÚµÚÒ»´Î×ª»»¿ªÊ¼Ê±¶Ô¹²ÓÃS&H\n									// µçÂ·½øÐÐ²ÉÑù¡£\n									// 0 = Èç¹ûÔÚÏÖÓÐ×ª»»¹ý³ÌÖÐ¹²ÓÃS&H²»´¦ÓÚÃ¦×´Ì¬£¬ÔòÔÚ²ÉÑù×¨ÓÃ\n									// S&HµÄÍ¬Ê±¶Ô¹²ÓÃS&H½øÐÐ²ÉÑù¡£\n									// Èç¹ûÔÚ²ÉÑù×¨ÓÃS&HÊ±¹²ÓÃS&H´¦ÓÚÃ¦×´Ì¬£¬ÔòÔÚÐÂ×ª»»ÖÜÆÚ¿ªÊ¼Ê±\n									// ¶Ô¹²ÓÃS&H½øÐÐ²ÉÑù¡£	\n	ADCONbits.ASYNCSAMP = 1;\n									// ASYNCSAMP£ºÒì²½×¨ÓÃS&H²ÉÑùÊ¹ÄÜÎ»\n									// 1 = ×¨ÓÃS&HÔÚ²»¶Ï²ÉÑù£¬Ò»¾­¼ì²âµ½´¥·¢Âö³å¼´ÖÕÖ¹²ÉÑù¡£ \n									// 0 = µ±¼ì²âµ½´¥·¢ÊÂ¼þÊ±×¨ÓÃS&H¿ªÊ¼²ÉÑù£¬²¢ÔÚÁ½¸öADCÊ±ÖÓÖÜÆÚÄÚ\n									// Íê³É²ÉÑù¹ý³Ì¡£	\n	ADCONbits.ADCS = 5;             // Clock Divider is set up for Fadc/6 \n									// TAD=41.66ns\n									// For simultaneus sampling total conversion time for one pair is 0.625us \n									// ADCS < 2:0>£ºA/D ×ª»»Ê±ÖÓ·ÖÆµÖµÑ¡ÔñÎ»\n									// Èç¹ûSLOWCLK = 0£¬ADCÊ±ÖÓ·ÖÆµÖµÈçÏÂ£º\n									// 111  = FADC/7 \n									// 110  = FADC/6.5 \n									// 101  = FADC/6 \n									// 100  = FADC/5.5 \n									// 011  = FADC/5 £¨Ä¬ÈÏ£©\n									// 010  = FADC/4.5 \n									// 001  = FADC/4 \n									// 000  = FADC/3.5 \n									// Èç¹ûSLOWCLK = 1£¬ADCÊ±ÖÓ·ÖÆµÖµÈçÏÂ£º\n									// 111  = FADC/8\n									// 110  = FADC/7\n									// 101  = FADC/6\n									// 100  = FADC/5\n									// 011  = FADC/4 £¨Ä¬ÈÏ£©\n									// 010  = FADC/3\n									// 001  = FADC/2\n									// 000  = FADC/1	\n	ADSTAT = 0;                     // Clear the ADSTAT register \n									// ADSTAT £ºA/D ×´Ì¬¼Ä´æÆ÷\n									// bit 15-7 Î´ÊµÏÖ£º¶ÁÎª0\n									// bit 6 P6RDY£ºÊäÈë¶Ô6 ×ª»»Êý¾Ý¾ÍÐ÷Î»\n									// µ±»º³åÇøÖÐÊý¾Ý¾ÍÐ÷Ê±´ËÎ»±»ÖÃ1£¬µ±Ð´Èë0 Ê±´ËÎ»±»ÇåÁã¡£\n									// bit 5 P5RDY£ºÊäÈë¶Ô5 ×ª»»Êý¾Ý¾ÍÐ÷Î»\n									// µ±»º³åÇøÖÐÊý¾Ý¾ÍÐ÷Ê±´ËÎ»±»ÖÃ1£¬µ±Ð´Èë0 Ê±´ËÎ»±»ÇåÁã¡£\n									// bit 4 P4RDY£ºÊäÈë¶Ô4 ×ª»»Êý¾Ý¾ÍÐ÷Î»\n									// µ±»º³åÇøÖÐÊý¾Ý¾ÍÐ÷Ê±´ËÎ»±»ÖÃ1£¬µ±Ð´Èë0 Ê±´ËÎ»±»ÇåÁã¡£\n									// bit 3 P3RDY£ºÊäÈë¶Ô3 ×ª»»Êý¾Ý¾ÍÐ÷Î»\n									// µ±»º³åÇøÖÐÊý¾Ý¾ÍÐ÷Ê±´ËÎ»±»ÖÃ1£¬µ±Ð´Èë0 Ê±´ËÎ»±»ÇåÁã¡£\n									// bit 2 P2RDY£ºÊäÈë¶Ô2 ×ª»»Êý¾Ý¾ÍÐ÷Î»\n									// µ±»º³åÇøÖÐÊý¾Ý¾ÍÐ÷Ê±´ËÎ»±»ÖÃ1£¬µ±Ð´Èë0 Ê±´ËÎ»±»ÇåÁã¡£\n									// bit 1 P1RDY£º  ÊäÈë¶Ô1 ×ª»»Êý¾Ý¾ÍÐ÷Î»\n									// µ±»º³åÇøÖÐÊý¾Ý¾ÍÐ÷Ê±´ËÎ»±»ÖÃ1£¬µ±Ð´Èë0 Ê±´ËÎ»±»ÇåÁã¡£\n									// bit 0 P0RDY£º  ÊäÈë¶Ô0 ×ª»»Êý¾Ý¾ÍÐ÷Î»\n									// µ±»º³åÇøÖÐÊý¾Ý¾ÍÐ÷Ê±´ËÎ»±»ÖÃ1£¬µ±Ð´Èë0 Ê±´ËÎ»±»ÇåÁã¡£\n   	// ADPCFG£ºA/D ¶Ë¿ÚÅäÖÃ¼Ä´æÆ÷   ADC configuration for Full-Bridge Inverter \n   	ADPCFGbits.PCFG0 = 0;           // AN0 Äæ±äµçÁ÷ \n   	ADPCFGbits.PCFG1 = 0;           // AN1 Äæ±äµçÑ¹\n\n   	ADCPC0bits.TRGSRC0 = 5;		    // AN0 and AN1 ±»PWM2´¥·¢\n									// TRGSRC0 < 4:0>£º´¥·¢0 ´¥·¢Ô´Ñ¡ÔñÎ»\n									// ÎªÄ£ÄâÍ¨µÀAN1 ºÍAN0 µÄ×ª»»Ñ¡Ôñ´¥·¢Ô´¡£\n									// 00000  = ²»Ê¹ÄÜ×ª»»\n									// 00001  = Ñ¡Ôñ¶ÀÁ¢Èí¼þ´¥·¢\n									// 00010  = Ñ¡ÔñÈ«¾ÖÈí¼þ´¥·¢\n									// 00011  = Ñ¡ÔñPWM ÌØÊâÊÂ¼þ´¥·¢\n									// 00100  = Ñ¡ÔñPWM ·¢ÉúÆ÷1 Ö÷´¥·¢\n									// 00101  = Ñ¡ÔñPWM ·¢ÉúÆ÷2 Ö÷´¥·¢\n									// 00110  = Ñ¡ÔñPWM ·¢ÉúÆ÷3 Ö÷´¥·¢\n									// 00111  = Ñ¡ÔñPWM ·¢ÉúÆ÷4 Ö÷´¥·¢\n									// 01000  = ±£Áô\n									// 01100  = Timer1 ÖÜÆÚÆ¥Åä\n									// 01101  = ±£Áô\n									// 01110  = Ñ¡ÔñPWM ·¢ÉúÆ÷1 ¸¨Öú´¥·¢\n									// 01111  = Ñ¡ÔñPWM ·¢ÉúÆ÷2 ¸¨Öú´¥·¢\n									// 10000  = Ñ¡ÔñPWM ·¢ÉúÆ÷3 ¸¨Öú´¥·¢\n									// 10001  = Ñ¡ÔñPWM ·¢ÉúÆ÷4 ¸¨Öú´¥·¢\n									// 10010  = ±£Áô\n									// 10110  = ±£Áô\n									// 10111  = PWM ·¢ÉúÆ÷1 ÏÞÁ÷ADC´¥·¢\n									// 11000  = PWM ·¢ÉúÆ÷2 ÏÞÁ÷ADC´¥·¢\n									// 11001  = PWM ·¢ÉúÆ÷3 ÏÞÁ÷ADC´¥·¢\n									// 11010  = PWM ·¢ÉúÆ÷4 ÏÞÁ÷ADC´¥·¢\n									// 11011  = ±£Áô\n									// 11111  = Timer2 ÖÜÆÚÆ¥Åä   	\n	ADCPC0bits.IRQEN0 = 1;			// Global ADC interrupt not requested \n									// IRQEN0 £º  ÖÐ¶ÏÇëÇóÔÊÐí0 Î»\n									// 1 = µ±Í¨µÀAN1 ºÍAN0 ÉÏÇëÇóµÄ×ª»»Íê³ÉÊ±ÔÊÐí²úÉúÖÐ¶ÏÇëÇó\n									// 0 = ²»²úÉúÖÐ¶ÏÇëÇó\n	//IPC27bits.ADCP0IP = 7;          // Set ADC Interrupt Priority \n	//IFS6bits.ADCP0IF = 0;	    	// Clear AD Interrupt Flag \n	//IEC6bits.ADCP0IE = 1;           // Enable the ADC Interrupt at start. \n	// End of ADC configuration for ACInput \n\n   	ADPCFGbits.PCFG2 = 0;           // AN2 ÊäÈë½»Á÷µçÑ¹\n   	ADPCFGbits.PCFG3 = 0;           // AN3 ÊäÈë½»Á÷µçÁ÷\n\n   	ADCPC0bits.TRGSRC1 = 6;		    // AN0 and AN1 triggered by PWM2 \n	ADCPC0bits.IRQEN1 = 1;			// Global ADC interrupt not requested \n	\n\n	//IPC27bits.ADCP1IP = 7;          // Set ADC Interrupt Priority \n	//IFS6bits.ADCP1IF = 0;	    	// Clear AD Interrupt Flag \n	//IEC6bits.ADCP1IE = 1;           // Enable the ADC Interrupt at start. \n\n	IPC3bits.ADIP = 1;\n	IFS0bits.ADIF = 0;\n	IEC0bits.ADIE = 1;\n\n	jumpTable[0] = &ConvPair0Handler;\n	jumpTable[2] = &ConvPair1Handler;\n	\n	ADBASE = (int)(&jumpTable[0]);\n		\n	// End of ADC configuration for AC Mains sensing \n\n}\n\n\nvoid StartADC(void)\n{\n	ADCONbits.ADON = 1;   // Enable the ADC module early because ADC settling time is about 2us \n}\n\n\nvoid initPWM(void)\n{\n	// PWM setup for Full-Bridge Inverter section \n	PWMCON1bits.ITB     = 1;	// ITB £º¶ÀÁ¢Ê±»ùÄ£Ê½Î»\n								// 1 = PHASEx/SPHASEx ¼Ä´æÆ÷Îª´ËPWM ·¢ÉúÆ÷Ìá¹©Ê±»ùÖÜÆÚ\n								// 0 = PTPER ¼Ä´æÆ÷Îª´ËPWM ·¢ÉúÆ÷Ìá¹©Ê±Ðò\n	PWMCON1bits.DTC     = 0;	// DTC < 1:0>£ºËÀÇø¿ØÖÆÎ»\n								// 00 = ¶ÔÓÚËùÓÐÊä³öÄ£Ê½Ê©¼ÓÕýËÀÇø\n								// 01 = ¶ÔÓÚËùÓÐÊä³öÄ£Ê½Ê©¼Ó¸ºËÀÇø\n								// 10 = ½ûÖ¹ËÀÇø¹¦ÄÜ\n								// 11 = ±£Áô\n	PWMCON1bits.CAM     = 1;	// CAM\n								// 1 = Ê¹ÄÜÖÐÐÄ¶ÔÆëÄ£Ê½\n								// 0 = ½ûÖ¹ÖÐÐÄ¶ÔÆëÄ£Ê½        \n	IOCON1bits.PENH     = 1; 	// PENH:PWMH Êä³öÒý½ÅËùÓÐÈ¨Î»\n								// 1 = ÓÉPWM Ä£¿é¿ØÖÆPWMxH Òý½Å\n								// 0 = ÓÉGPIOÄ£¿é¿ØÖÆPWMxH Òý½Å\n	IOCON1bits.PENL     = 1; 	// PENL£ºPWML Êä³öÒý½ÅËùÓÐÈ¨Î»\n								// 1 = ÓÉPWM Ä£¿é¿ØÖÆPWMxL Òý½Å\n								// 0 = ÓÉGPIOÄ£¿é¿ØÖÆPWMxL Òý½Å\n\n	IOCON1bits.PMOD     = 0;    // PMOD < 1:0>£ºPWM I/OÒý½ÅÄ£Ê½Î»\n								// 00 = PWM I/O Òý½Å¶Ô´¦ÓÚ»¥²¹Êä³öÄ£Ê½\n								// 01 = PWM I/O Òý½Å¶Ô´¦ÓÚÈßÓàÊä³öÄ£Ê½\n								// 10 = PWM I/O Òý½Å¶Ô´¦ÓÚÍÆÍìÊä³öÄ£Ê½\n								// 11 = PWM I/O Òý½Å¶Ô´¦ÓÚÕæÕý¶ÀÁ¢PWM Êä³öÄ£Ê½     \n	IOCON1bits.OVRDAT   = 0;  // OVRDAT < 1:0>£ºÊ¹ÄÜ¸ÄÐ´Ê±PWMxH ºÍPWMxL Òý½ÅµÄÊý¾ÝÎ»\n								// Èç¹ûOVERENH = 1£¬ÔòOVRDAT < 1> ÎªPWMxH Ìá¹©Êý¾Ý¡£\n								// Èç¹ûOVERENL =  1£¬ÔòOVRDAT < 0> ÎªPWMxL Ìá¹©Êý¾Ý¡£    \n	IOCON1bits.OVRENH   = 1; 	// OVRENH£º    PWMxH Òý½Å¸ÄÐ´Ê¹ÄÜÎ»\n								// 1 = OVRDAT < 1> ÎªPWMxH Òý½ÅÌá¹©Êä³öÊý¾Ý\n								// 0 =  ÓÉPWM ·¢ÉúÆ÷ÎªPWMxH Òý½ÅÌá¹©Êý¾Ý\n	IOCON1bits.OVRENL   = 1;  // OVRENL£º   PWMxL Òý½Å¸ÄÐ´Ê¹ÄÜÎ»\n								// 1 = OVRDAT < 0> ÎªPWMxL Òý½ÅÌá¹©Êä³öÊý¾Ý\n								// 0 = ÓÉPWM ·¢ÉúÆ÷ÎªPWMxL Òý½ÅÌá¹©Êý¾Ý\n								\n	ALTDTR1             = 0;					//ALTDTRx < 13:0>£ºPWMx ËÀÇøµ¥ÔªµÄÎÞ·ûºÅ14Î»ËÀÇøÖµÎ»\n	PHASE1              = TriPD;		// PHASEx < 15:0>£º´ËPWM·¢ÉúÆ÷µÄ PWMÏàÒÆÖµ»ò¶ÀÁ¢Ê±»ùÖÜÆÚÎ»\n	PDC1                = TriPD>>1;	// PDCx < 15:0> £ºPWM ·¢ÉúÆ÷x Õ¼¿Õ±ÈÖµÎ»\n	TRIG1               = TriPD>>1;	// TRGCMP < 15:3>£º´¥·¢Æ÷¿ØÖÆÖµÎ»\n								// µ±Ö÷PWM ¹¤×÷ÔÚ±¾µØÊ±»ùÊ±£¬´Ë¼Ä´æÆ÷°üº¬±È½ÏÖµ£¬\n								// ¿ÉÒÔ´¥·¢ADCÄ£¿é¡£\n	STRIG1              = TriPD>>1;	//STRGCMP < 15:3>£º¸¨Öú´¥·¢Æ÷¿ØÖÆÖµÎ»\n								//µ±¸¨ÖúPWM ¹¤×÷ÔÚ±¾µØÊ±»ùÊ±£¬´Ë¼Ä´æÆ÷°üº¬±È½ÏÖµ£¬\n								//¿ÉÒÔ´¥·¢ADCÄ£¿é¡£\n\n	TRGCON1bits.DTM     = 1;	// DTM£ºË«´¥·¢Æ÷Ä£Ê½Î»\n								// 1 = ¸¨Öú´¥·¢ÊÂ¼þºÍÖ÷´¥·¢ÊÂ¼þÒ»Æð²úÉúPWM ´¥·¢ÐÅºÅ¡£\n								// 0 = ¸¨Öú´¥·¢ÊÂ¼þ²»Í¬Ö÷´¥·¢ÊÂ¼þÒ»Æð²úÉúPWM ´¥·¢ÐÅºÅ¡£\n								// ¶øÊÇ²úÉúÁ½¸ö¶ÀÁ¢µÄPWM ´¥·¢ÐÅºÅ¡£\n	TRGCON1bits.TRGDIV  = 1;	// TRGDIV < 3:0>£º´¥·¢ÐÅºÅÊä³ö·ÖÆµ±ÈÎ»\n								// 0000 = Ã¿¸ö´¥·¢ÊÂ¼þÊä³öÒ»´Î´¥·¢ÐÅºÅ\n								// 0001 = Ã¿2 ¸ö´¥·¢ÊÂ¼þÊä³öÒ»´Î´¥·¢ÐÅºÅ\n								// 0010 = Ã¿3 ¸ö´¥·¢ÊÂ¼þÊä³öÒ»´Î´¥·¢ÐÅºÅ\n								// 0011 = Ã¿4 ¸ö´¥·¢ÊÂ¼þÊä³öÒ»´Î´¥·¢ÐÅºÅ\n								// 0100 = Ã¿5 ¸ö´¥·¢ÊÂ¼þÊä³öÒ»´Î´¥·¢ÐÅºÅ\n								// 0101 = Ã¿6 ¸ö´¥·¢ÊÂ¼þÊä³öÒ»´Î´¥·¢ÐÅºÅ\n								// 0110 = Ã¿7 ¸ö´¥·¢ÊÂ¼þÊä³öÒ»´Î´¥·¢ÐÅºÅ\n								// 0111 = Ã¿8 ¸ö´¥·¢ÊÂ¼þÊä³öÒ»´Î´¥·¢ÐÅºÅ\n								// 1000 = Ã¿9 ¸ö´¥·¢ÊÂ¼þÊä³öÒ»´Î´¥·¢ÐÅºÅ\n								// 1001 = Ã¿10¸ö´¥·¢ÊÂ¼þÊä³öÒ»´Î´¥·¢ÐÅºÅ\n								// 1010 = Ã¿11¸ö´¥·¢ÊÂ¼þÊä³öÒ»´Î´¥·¢ÐÅºÅ\n								// 1011 = Ã¿12¸ö´¥·¢ÊÂ¼þÊä³öÒ»´Î´¥·¢ÐÅºÅ\n								// 1100 = Ã¿13¸ö´¥·¢ÊÂ¼þÊä³öÒ»´Î´¥·¢ÐÅºÅ\n								// 1101 = Ã¿14¸ö´¥·¢ÊÂ¼þÊä³öÒ»´Î´¥·¢ÐÅºÅ\n								// 1110 = Ã¿15¸ö´¥·¢ÊÂ¼þÊä³öÒ»´Î´¥·¢ÐÅºÅ\n								// 1111 = Ã¿16¸ö´¥·¢ÊÂ¼þÊä³öÒ»´Î´¥·¢ÐÅºÅ\n	TRGCON1bits.TRGSTRT = 0;	// TRGSTRT < 5:0>£º´¥·¢Æ÷ºó·ÖÆµ±ÈÆô¶¯Ê¹ÄÜÑ¡ÔñÎ»\n								// 000000 = ÔÚÄ£¿éÊ¹ÄÜºóµÈ´ý0 ¸öPWM ÖÜÆÚ²úÉúµÚÒ»¸ö´¥·¢ÊÂ¼þ\n								// 000001 = ÔÚÄ£¿éÊ¹ÄÜºóµÈ´ý1 ¸öPWM ÖÜÆÚ²úÉúµÚÒ»¸ö´¥·¢ÊÂ¼þ\n								// 000010 = ÔÚÄ£¿éÊ¹ÄÜºóµÈ´ý1 ¸öPWM ÖÜÆÚ²úÉúµÚÒ»¸ö´¥·¢ÊÂ¼þ\n	FCLCON1             = 0x0003; 		// FLTMOD < 1:0> £ºPWM ·¢ÉúÆ÷x µÄ¹ÊÕÏÄ£Ê½Î»\n								// 00 = ËùÑ¡¹ÊÕÏÔ´Ç¿ÖÆPWMxH ºÍPWMxL Òý½ÅÎªFLTDAT Öµ£¨Ëø¶¨Ä£Ê½£©\n								// 01 = ËùÑ¡¹ÊÕÏÔ´Ç¿ÖÆPWMxH ºÍPWMxL Òý½ÅÎªFLTDAT Öµ£¨ÖÜÆÚÄ£Ê½£©\n								// 10 = ±£Áô\n								// 11 = ½ûÖ¹¹ÊÕÏÊäÈë                    \n								\n	//-------------------------------------------------------------------------\n	PWMCON2bits.ITB     = 1;    \n	PWMCON2bits.DTC     = 0;    \n	PWMCON2bits.CAM     = 1;\n\n	IOCON2bits.PENH     = 1;                    \n	IOCON2bits.PENL     = 1;                  \n\n	IOCON2bits.POLH     = 1;\n	IOCON2bits.POLL     = 1;\n\n	IOCON2bits.PMOD     = 0;\n	IOCON2bits.OVRDAT   = 0;\n	IOCON2bits.OSYNC    = 1;\n	IOCON2bits.OVRENH   = 1;\n	IOCON2bits.OVRENL   = 1;\n\n	ALTDTR2             = 0;\n	PHASE2              = TriPD;\n	PDC2                = TriPD>>1;\n	TRIG2               = 8;//TriPD>>1;\n	//STRIG2              = TriPD>>1;\n\n	TRGCON2bits.DTM     = 0;                    \n	TRGCON2bits.TRGDIV  = 1;\n	TRGCON2bits.TRGSTRT = 0;\n\n	FCLCON2             = 0x0003;\n\n	//-------------------------------------------------------------------------\n	//-------------------------------------------------------------------------\n	PWMCON3bits.ITB     = 1;    \n	PWMCON3bits.DTC     = 0;    \n	PWMCON3bits.CAM     = 1;\n\n	IOCON3bits.PENH     = 0;                    \n	IOCON3bits.PENL     = 0;                  \n\n	IOCON3bits.POLH     = 1;\n	IOCON3bits.POLL     = 1;\n	/*\n	IOCON3bits.PMOD     = 0;\n	IOCON3bits.OVRDAT   = 0;\n	IOCON3bits.OSYNC    = 1;\n	IOCON3bits.OVRENH   = 1;\n	IOCON3bits.OVRENL   = 1;\n	*/\n	ALTDTR3             = 0;\n	PHASE3              = TriPD;\n	PDC3                = TriPD>>1;\n	TRIG3               = 8;//TriPD>>1;\n	//STRIG3              = TriPD>>1;\n\n	TRGCON3bits.DTM     = 0;                    \n	TRGCON3bits.TRGDIV  = 1;\n	TRGCON3bits.TRGSTRT = 0;\n\n	FCLCON3             = 0x0003;		\n}\n\n\nvoid StartPWM(void)\n{\n	PTCONbits.PTEN      = 1;                     // Enable PWM module Turn ON PWM outputs to enable inverter output\n	IOCON1bits.OVRENH   = 0;\n	IOCON1bits.OVRENL   = 0;\n	//IOCON2bits.OVRENH = 0;\n	IOCON2bits.OVRENL   = 0;\n    \n}\n\n/* Example code for ADC ISR*/\nvoid __attribute__((interrupt, no_auto_psv)) _ADCInterrupt (void)\n{\n	IFS0bits.ADIF = 0; // Clear ADC Pair 0 Interrupt Flag\n	((void (*)()) *((int *)ADBASE))(); // Call the corresponding handler	\n}\n\nint tmpi;\nvoid RMS_CALC()\n{\n	if (finvRMS == READY_TO_CALCULATE)\n	{\n		//Value.LoadI = inv.size;\n		//Value.InvF = inv.f;//((mulss(Value.InvF,Q15(0.95))>>15) + (mulss(inv.ofs,Q15(0.05))>>15));\n		siv /= inv.size;\n		tmpi = Root(siv);\n		inv.V = (\n					(mulss(inv.V,Q15(0.8))>>15)\n					+\n					(mulss(tmpi,Q15(0.2))>>15)\n					);\n		siv = 0;\n		Value.InvV = mulss(inv.V,Q15(0.35))>>14; //30844\n		finvRMS = CALCULATION_DONE;\n	}\n\n	if (facRMS == READY_TO_CALCULATE)\n	{\n		//Value.ACInI = m.size;\n		//Value.ACInF = ((mulss(Value.ACInF,Q15(0.95))>>15) + (mulss(m.ofs,Q15(0.05))>>15));\n		smv /= m.size;\n		tmpi = Root(smv);\n		m.V = (\n					(mulss(m.V,Q15(0.8))>>15)\n					+\n					(mulss(tmpi,Q15(0.2))>>15)\n					);\n		smv = 0;\n		Value.ACInV = mulss(m.V,Q15(0.45))>>15;//60225\n		facRMS = CALCULATION_DONE;\n	}\n}\n\n",
			"file": "pwm.c",
			"file_size": 18670,
			"file_write_time": 130122963002329352,
			"settings":
			{
				"buffer_size": 18670,
				"line_ending": "Unix",
				"scratch": true
			}
		},
		{
			"file": "/D/Tools/st3dev/sublime_plugin.py",
			"settings":
			{
				"buffer_size": 17218,
				"line_ending": "Unix"
			}
		},
		{
			"file": "clock.c",
			"settings":
			{
				"buffer_size": 1414,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/dsPIC make.sublime-build",
	"command_palette":
	{
		"height": 56.0,
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"gu",
				"Gist: Update File"
			],
			[
				"og",
				"Gist: Open Gist"
			],
			[
				"gistb",
				"Gist: Create Public Gist"
			],
			[
				"g s",
				"Git: Status"
			],
			[
				"gda",
				"Git: Diff All"
			],
			[
				"gi",
				"Git: Init"
			],
			[
				"git",
				"Git: Init"
			],
			[
				"op",
				"Gist: Open Gist"
			],
			[
				"gist u",
				"Gist: Update File"
			],
			[
				"open",
				"Gist: Open Gist"
			],
			[
				"create",
				"Gist: Create Public Gist"
			],
			[
				"crea",
				"Gist: Create Public Gist"
			],
			[
				"gist",
				"Gist: Update File"
			],
			[
				"ogis",
				"Gist: Open Gist"
			],
			[
				"ope",
				"Gist: Open Gist"
			],
			[
				"cre",
				"Gist: Create Public Gist"
			],
			[
				"intall",
				"Package Control: Install Package"
			],
			[
				"openg",
				"Gist: Open Gist"
			],
			[
				"opn",
				"Gist: Open Gist"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"diff",
				"Git: Diff All"
			],
			[
				"gis",
				"Gist: Open Gist"
			],
			[
				"set c++",
				"Set Syntax: C++"
			],
			[
				"setpy",
				"Set Syntax: Python"
			],
			[
				"set php",
				"Set Syntax: PHP"
			],
			[
				"tasknew",
				"Tasks: New"
			],
			[
				"taskn",
				"Tasks: New"
			],
			[
				"settas",
				"Set Syntax: Tasks"
			],
			[
				"todo",
				"Set Syntax: iTodo"
			],
			[
				"prj",
				"Project: Add Folder"
			],
			[
				"removep",
				"Package Control: Remove Package"
			],
			[
				"doc",
				"DocBlockr: Reparse comment block"
			],
			[
				"set javsc",
				"Set Syntax: JavaScript"
			],
			[
				"gisto",
				"Gist: Open Gist"
			],
			[
				"g",
				"Git: Init"
			],
			[
				"remove	",
				"Package Control: Remove Package"
			],
			[
				"set syn",
				"Set Syntax: JavaScript"
			],
			[
				"theme",
				"BracketHighlighter: Toggle String Bracket Escape Mode"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: Install Package"
			],
			[
				"sspy",
				"Set Syntax: Python"
			],
			[
				"jquery",
				"Set Syntax: jQuery (JavaScript)"
			]
		],
		"width": 514.0
	},
	"console":
	{
		"height": 412.0,
		"history":
		[
			"import urllib2,os;pf='Package Control.sublime-package';ipp=sublime.installed_packages_path();os.makedirs(ipp) if not os.path.exists(ipp) else None;open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/D/Tools/st3dev/Data/Packages/Default/Preferences.sublime-settings",
		"/D/Tools/st3dev/Data/Packages/User/Preferences.sublime-settings",
		"/D/Tools/st3dev/注册右键.bat",
		"/D/Tools/Sublime Text/Data/Packages/User/Preferences.sublime-settings",
		"/D/UPS/tbupsv20/clock.c",
		"/D/UPS/tbupsv20/uart.c",
		"/D/UPS/tbupsv20/i2c.c",
		"/D/Tools/Sublime Text3/Data/Packages/User/Preferences.sublime-settings",
		"/D/UPS/tbupsv20/main.c",
		"/D/UPS/tbupsv20/define.h",
		"/D/UPS/tbupsv20/data_struct.h",
		"/D/UPS/tbupsv20/StateMachine.c",
		"/D/UPS/tbupsv20/pwm.c",
		"/D/Tools/Sublime Text/Data/Packages/User/dsPIC make.sublime-build",
		"/D/UPS/tbupsv20/dsp.h",
		"/C/Documents and Settings/jwz/桌面/msvdm.dll",
		"/C/httpresponse.rrr",
		"/D/UPS/tbupsv20/UPS.sublime-project",
		"/D/UPS/tbupsv20/Makefile",
		"/D/UPS/tbupsv20/PTG.cmd",
		"/D/UPS/tbupsv20/NMakefile",
		"/D/UPS/tbupsv20/README.md",
		"/D/UPS/tbupsv20/ups.tagsrc",
		"/D/UPS/tbupsv20/分析.cpp",
		"/D/UPS/tbupsv20/UPS.sublime-workspace",
		"/D/UPS/tbupsv20/BUILD_PTG.cmd",
		"/D/UPS/xSingle2/Makefile",
		"/D/UPS/tbupsv20/pwm.h",
		"/D/UPS/tbupsv20/menu.c",
		"/D/UPS/tbupsv20/i2c_Func.c",
		"/D/UPS/xSingle2/pwm.c",
		"/D/UPS/xSingle2/BUILD_PTG.cmd",
		"/D/UPS/tbupsv20/BUILD.cmd",
		"/D/UPS/xSingle2/p33FJ16GS504.h",
		"/D/Tools/Sublime Text/Data/Packages/Default/Preferences.sublime-settings",
		"/D/Tools/Sublime Text/Data/Packages/Git/Git.sublime-settings",
		"/D/Tools/Sublime Text/Data/Packages/User/Git.sublime-settings",
		"/D/UPS/xSingle2/pid.s",
		"/D/Tools/Sublime Text/Data/Packages/C++/C++.sublime-build",
		"/D/Tools/Sublime Text/Data/Packages/User/bh_core.sublime-settings",
		"/D/Tools/Sublime Text/Data/Packages/BracketHighlighter/bh_core.sublime-settings",
		"/D/UPS/xSingle2/menu.c",
		"/D/UPS/xSingle2/main.c",
		"/C/Program Files/Microchip/MPLAB IDE/Readmes/Readme for PK3CMD.txt",
		"/D/UPS/xSingle2/run.bat",
		"/D/Tools/Sublime Text/Data/Packages/User/SideBarEnhancements/Open With/Side Bar.sublime-menu",
		"/D/UPS/xSingle2/data_struct.h",
		"/D/UPS/xSingle2/pwm.h",
		"/D/UPS/xSingle2/i2c.c",
		"/D/Backup/Disk D/Learning UPS/PIC/Offline UPS Reference Design Source Code_/Offline UPS Reference Design Source Code/SourceCode_OfflineUPS_220V/offline_ups_isr.c",
		"/D/UPS/xSingle2/clock.c",
		"/D/UPS/xSingle2/StateMachine.c",
		"/D/UPS/xSingle2/adc_common.c",
		"/D/UPS/xSingle2/define.h",
		"/C/Documents and Settings/jwz/.ssh/id_rsa",
		"/C/Documents and Settings/jwz/.ssh/id_rsa.pub",
		"/C/WINDOWS/system32/cmd.exe",
		"/D/msysgit/git-cmd.bat",
		"/D/Tools/Sublime Text/Data/Packages/Default/Default (Windows).sublime-keymap",
		"/D/Tools/Sublime Text/Data/Packages/AdvancedNewFile/Default (Windows).sublime-keymap",
		"/D/jfxtion/jfxion/J2MEFxion_Lib/String.cpp",
		"/D/jfxtion/jfxion/J2MEFxion_Lib/String.h",
		"/D/Tools/Sublime Text/sublime_plugin.py",
		"/D/UPS/xSingle1/pwm.c",
		"/D/Tools/Sublime Text/Data/Packages/User/ConvertToUTF8.sublime-settings"
	],
	"find":
	{
		"height": 36.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"D:\\UPS\\tbupsv20",
			"D:\\UPS\\xSingle2,D:\\Tools\\Sublime Text",
			"D:\\UPS\\xSingle2",
			"D:\\Tools\\Sublime Text\\Data\\Packages\\ConvertToUTF8"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"highl",
			"bracket",
			"80000",
			"SCR",
			"invshift",
			"19000",
			"menu.h",
			"obj\\",
			"m",
			"SetPhase1",
			"PD1",
			"SetPhase2(PD1)",
			"SetPhase1",
			"障",
			"<",
			"mplabc30",
			"PD0",
			"\\\\",
			" ",
			" +",
			"\\",
			"512",
			"/",
			"\\",
			"ctrl+a",
			"TRIANGLE_PERIOD",
			"DUTY_PERIOD0",
			"DUTY_PERIOD",
			"fACRMSCalculation",
			"fRMSCalculation",
			"fACRMSCalculation",
			"jumpTable",
			"ADBASE",
			"systemState",
			"//",
			"			//",
			"			// err = m.i - inv.i;// - 34;\n			// sum += err;\n			// if (sum>32000) sum = 32000;\n			// if (sum<-32000) sum = -32000;\n			\n			// pmcnt = (mulss(err,Q15(0.5))>>15)\n			// 		// + \n			// 		//(mulss(sum,Q15(0.0001))>>15)\n			// 		+(err - perr)*9\n			// 		;	\n\n			// if (pmcnt>16) pmcnt = 16;\n			// if (pmcnt<-16) pmcnt = -16;\n			\n			// if (jabs(m.size-inv.size)>3)\n			// {\n			// 	if (inv.size<m.size)\n			// 	{\n			// 		DUTY_PERIOD0 += jabs(pmcnt);\n			// 	}\n			// 	else\n			// 	{\n			// 		DUTY_PERIOD0 -= jabs(pmcnt);\n			// 	}\n			// }	\n			// else\n			// {	\n			// 	DUTY_PERIOD0 -= pmcnt;\n			// 	if (err==0 && ((Value.ACInV - Value.InvV<50) || Duty == Q15(DUTY_SCALE))) \n			// 	{\n			// 		inv.synced++;\n			// 	}	\n			// }\n			\n			\n			// if (DUTY_PERIOD0<15000) DUTY_PERIOD0 = 15000;\n			// if (DUTY_PERIOD0>19000) DUTY_PERIOD0 = 19000;",
			"_ADCP0Interrupt",
			"init_encoding_vars",
			"converttoutf8",
			"detect_on_fail",
			"detectonfail",
			"ConvertToUtf8",
			"converttoutf8",
			"convert_to_utf8",
			"preview_action",
			"convert_to_utf8",
			"run_command",
			"detect_on_fail",
			"preview",
			"status_message",
			"message_d",
			"invV",
			"Vac",
			"mulss",
			"urllib.quote_plus",
			"utf8 instead",
			"this",
			"cstr",
			"name",
			"goods",
			"shopping",
			"：",
			"\\",
			":\\",
			"int",
			"application_command_classes",
			"AD_CALC",
			"code char *WorkMode[]={\"在线式\",\"离线式\"};\ncode char *StartMode[]={\"自动\",\"手动\"};\n\ncode char *BaudRate[]={\"1200\",\"2400\",\"4800\",\"9600\"};\ncode char *DataBits[]={\"8\",\"7\"};\ncode char *StopBits[]={\"1\",\"2\"};\ncode char *OddEven[]={\"无\",\"奇\",\"偶\"};\n\ncode strArr SettingArray[]=\n",
			"code char *WorkMode[]={\"在线式\",\"离线式\"};\ncode char *StartMode[]={\"自动\",\"手动\"};\n\ncode char *BaudRate[]={\"1200\",\"2400\",\"4800\",\"9600\"};\ncode char *DataBits[]={\"8\",\"7\"};\ncode char *StopBits[]={\"1\",\"2\"};\ncode char *OddEven[]={\"无\",\"奇\",\"偶\"};\n\ncode strArr SettingArray[]=\n{",
			"idx",
			"IDX",
			"idx",
			"i",
			"l",
			"mon\ntue\nwed\nthu\nfri\nsat\nsun\n",
			"ItemStr"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "i2c.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3344,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"in_converting": true,
							"origin_encoding": "GBK",
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 405.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "main.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1462,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"in_converting": true,
							"origin_encoding": "GBK",
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "pwm.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18670,
						"regions":
						{
						},
						"selection":
						[
							[
								4355,
								4355
							]
						],
						"settings":
						{
							"in_converting": true,
							"origin_encoding": "GBK",
							"revert_to_scratch": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2453.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/D/Tools/st3dev/sublime_plugin.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17218,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "clock.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1414,
						"regions":
						{
						},
						"selection":
						[
							[
								414,
								414
							]
						],
						"settings":
						{
							"origin_encoding": "ASCII",
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 368.0
	},
	"output.git":
	{
		"height": 100.0
	},
	"output.jsconsole_view":
	{
		"height": 484.0
	},
	"output.jshint_view":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 0.0
	},
	"project": "UPS.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"pwm",
				"xSingle2/pwm.c"
			],
			[
				"init",
				"/D/Tools/Sublime Text/Data/Packages/GBK Encoding Support/tmp/i2c.c                G%3A%5CxS1%5CxSingle1%5Ci2c.c"
			],
			[
				"de",
				"/C/Users/jwz/Documents/demo.c"
			],
			[
				"m",
				"/D/Tools/Sublime Text/Data/Packages/GBK Encoding Support/tmp/Menu3.c                G%3A%5C__%E8%BE%85%E4%BB%B6%E8%AE%BE%E8%AE%A1___%5CUPS%5CADLIB%5CPrj%5CDisplay_Soft%5CMenu3.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 124.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
